// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id            String      @id @default(uuid())
  name          String
  country       String
  arena         String
  arenaCapacity Int
  logo          String
  manager       String
  competition   Competition
  players       Player[]
}

model Player {
  id       String   @id @default(uuid())
  name     String
  position Position
  age      Int
  teamId   String
  team     Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

enum Competition {
  euroleague
  eurocup
}

enum Position {
  PG
  SG
  SF
  PF
  C
}

model Log {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  action    String
  entity    String?
  entityId  String?
  timestamp DateTime @default(now())
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  password      String
  role          Role           @default(USER)
  logs          Log[]
  MonitoredUser MonitoredUser?
}

model MonitoredUser {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @unique
  reason     String
  detectedAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
